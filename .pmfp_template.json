{
    "language": "go",
    "env": "gomod",
    "description": "go语言grpc服务和sdk的简化版模板库,去掉了channelz和拦截器支持.",
    "author": "hsz",
    "template_type": "socket",
    "requires": [
        "github.com/Golang-Tools/grpcsdk@v0.0.2",
        "github.com/Golang-Tools/loggerhelper/v2@v2.0.1",
        "github.com/Golang-Tools/schema-entry-go/v2@v2.1.0",
        "google.golang.org/grpc@v1.46.2",
        "google.golang.org/protobuf@v1.27.1"
    ],
    "template_keys": {
        "serv_name": {
            "description": "定义service的名字",
            "default": "{{ project_name }}",
            "ask": true
        },
        "app_name": {
            "description": "定义app的名字",
            "default": "{{ project_name }}"
        }
    },
    "components": {
        "sdk": {
            "source": "cp_go_grpc//sdk",
            "description": "grpc的客户端定义",
            "default_path": "{{ serv_name }}_sdk"
        },
        "serv": {
            "source": "cp_go_grpc//serv",
            "description": "grpc的服务端定义",
            "default_path": "{{ serv_name }}_serv"
        },
        "main": {
            "source": "cp_go_grpc//main",
            "description": "入口文件",
            "default_path": "main.go"
        },
        "service_schema": {
            "source": "cp_go_grpc//service_schema",
            "description": "项目定义service的proto文件",
            "default_path": "pbschema/{{ serv_name }}.proto"
        },
        "docker-compose": {
            "source": "cp_dockercompose@v0.0.2//server_standalone",
            "description": "通用的服务使用的dockercompose,适用于调试",
            "default_path": "docker-compose.yml"
        },
        "dockerfile": {
            "source": "cp_dockerfiles@v0.0.1//go_grpc_pure_dockerfile",
            "description": "构造grpc项目的dockerfile",
            "default_path": "dockerfile"
        }
    }
}